name: Instance Refresh

env:
  ARTIFACT_NAME: webapp
  AWS_REGION: us-east-1
  ENVIRONMENT: test

on:
  workflow_dispatch:
  push:
    branches: [master]
jobs:
  tests:
    runs-on: ubuntu-latest

    name: Run unit tests
    steps:
      - uses: actions/checkout@v4
      - name: "Create .env file"
        run: |
          touch .env
          echo ENVIRONMENT=${{ env.ENVIRONMENT }} >> .env
          echo HOSTNAME=${{ secrets.HOSTNAME}} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo DATABASE=${{ vars.DATABASE }} >> .env
          echo DBUSER=${{ vars.DBUSER }} >> .env
          echo DBPASSWORD=${{ secrets.DBPASSWORD }} >> .env
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run test
  # Packer init, validate and build
  packer:
    needs: tests
    runs-on: ubuntu-latest
    name: Build AWS Custom AMI with REST API app artifacts
    steps:
      - name: Checkout code from branch
        uses: actions/checkout@v4

      - name: Build artifacts
        run: |
          touch .env
          echo ENVIRONMENT=${{ env.ENVIRONMENT }} >> .env
          echo HOSTNAME=${{ secrets.HOSTNAME}} >> .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo DATABASE=${{ vars.DATABASE }} >> .env
          echo DBUSER=${{ vars.DBUSER }} >> .env
          echo DBPASSWORD=${{ secrets.DBPASSWORD }} >> .env
          zip -r webapp.zip ./
          pwd ./webapp

      - name: Packer variables
        run: |
          touch packer/ami.pkrvars.hcl
          echo ami_prefix=\"${{ vars.AMI_PREFIX }}\" >> ami.pkrvars.hcl
          echo OS=\"${{ vars.OS }}\" >> ami.pkrvars.hcl
          echo ubuntu_version=\"${{ vars.VERSION }}\" >> ami.pkrvars.hcl
          echo ssh_username=\"${{ secrets.SSH }}\" >> ami.pkrvars.hcl
          echo subnet_id=\"${{ secrets.SUBNET_ID }}\" >> ami.pkrvars.hcl
          echo dev_id=\"${{ secrets.DEV_ID }}\" >> ami.pkrvars.hcl
          echo prod_id=\"${{ secrets.PROD_ID }}\" >> ami.pkrvars.hcl
          echo source_ami=\"${{ vars.SOURCE_AMI }}\" >> ami.pkrvars.hcl
          echo aws_region=\"${{ vars.AWS_REGION }}\" >> ami.pkrvars.hcl
          echo instance_type=\"${{ vars.INSTANCE_TYPE}}\" >> ami.pkrvars.hcl
          echo volume_type=\"${{ vars.VOLUME_TYPE}}\" >> ami.pkrvars.hcl
          echo volume_size=\"${{ vars.VOLUME_SIZE}}\" >> ami.pkrvars.hcl
          echo device_name=\"${{ vars.DEVICE_NAME}}\" >> ami.pkrvars.hcl

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Packer init, format validate and build custom AMI
        run: |
          cd packer &&
          packer fmt .
          packer init ami.pkr.hcl
          packer validate -evaluate-datasources --var-file=ami.pkrvars.hcl ami.pkr.hcl
          packer build --var-file=ami.pkrvars.hcl ami.pkr.hcl